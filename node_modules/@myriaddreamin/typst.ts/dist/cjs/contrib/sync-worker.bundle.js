/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository https://github.com/Myriad-Dreamin/typst.ts/blob/main/packages/typst.ts
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/contrib/sync-worker.mts
var sync_worker_exports = {};
__export(sync_worker_exports, {
  registerSyncWorker: () => registerSyncWorker
});
module.exports = __toCommonJS(sync_worker_exports);
function registerSyncWorker(_workerArgs) {
}
//! This works on any browser that supports service worker https://jasonformat.com/javascript-sleep/
//!   See https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/fetch_event
//! It is quite important to note that the service worker can only intercept requests that has same origin.
//! For example, if you have registered this worker with url:
//!   register('typst.ts/article/sync-worker.js')
//! This worker will be able to intercept requests that has same origin as the above url:
//!   typst.ts/article/...
//! But it will not be able to intercept requests that has different origin:
//!   typst.ts/book/...
//!   typst.ts/...
//! To intercept requests that has different origin, you need to register the worker with url:
//!   register('typst.ts/sync-worker.js')
//! or all urls that you want to intercept:
//!   register('typst.ts/book/sync-worker.js')
