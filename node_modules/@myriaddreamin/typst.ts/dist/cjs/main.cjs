"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTypstCompiler = exports.FetchPackageRegistry = exports.FetchAccessModel = exports.createTypstSvgRenderer = exports.createTypstRenderer = exports.rendererBuildInfo = exports.preloadSystemFonts = exports.preloadRemoteFonts = void 0;
const initOptions = require("./options.init.cjs");
var options_init_mjs_1 = require("./options.init.cjs");
Object.defineProperty(exports, "preloadRemoteFonts", { enumerable: true, get: function () { return options_init_mjs_1.preloadRemoteFonts; } });
Object.defineProperty(exports, "preloadSystemFonts", { enumerable: true, get: function () { return options_init_mjs_1.preloadSystemFonts; } });
const renderer = require("./renderer.cjs");
var renderer_mjs_1 = require("./renderer.cjs");
Object.defineProperty(exports, "rendererBuildInfo", { enumerable: true, get: function () { return renderer_mjs_1.rendererBuildInfo; } });
Object.defineProperty(exports, "createTypstRenderer", { enumerable: true, get: function () { return renderer_mjs_1.createTypstRenderer; } });
Object.defineProperty(exports, "createTypstSvgRenderer", { enumerable: true, get: function () { return renderer_mjs_1.createTypstSvgRenderer; } });
const view_mjs_1 = require("./render/canvas/view.cjs");
const compiler = require("./compiler.cjs");
const index_mjs_1 = require("./fs/index.cjs");
const package_mjs_1 = require("./fs/package.cjs");
var index_mjs_2 = require("./fs/index.cjs");
Object.defineProperty(exports, "FetchAccessModel", { enumerable: true, get: function () { return index_mjs_2.FetchAccessModel; } });
var package_mjs_2 = require("./fs/package.cjs");
Object.defineProperty(exports, "FetchPackageRegistry", { enumerable: true, get: function () { return package_mjs_2.FetchPackageRegistry; } });
var compiler_mjs_1 = require("./compiler.cjs");
Object.defineProperty(exports, "createTypstCompiler", { enumerable: true, get: function () { return compiler_mjs_1.createTypstCompiler; } });
// Export module on window.
if (typeof window !== 'undefined') {
    window.TypstRenderModule = {
        RenderView: view_mjs_1.RenderView,
        createTypstRenderer: renderer.createTypstRenderer,
        createTypstSvgRenderer: renderer.createTypstRenderer,
        preloadRemoteFonts: initOptions.preloadRemoteFonts,
        preloadSystemFonts: initOptions.preloadSystemFonts,
    };
    window.TypstCompileModule = {
        createTypstCompiler: compiler.createTypstCompiler,
        preloadRemoteFonts: initOptions.preloadRemoteFonts,
        preloadSystemFonts: initOptions.preloadSystemFonts,
        FetchAccessModel: index_mjs_1.FetchAccessModel,
        MemoryAccessModel: index_mjs_1.MemoryAccessModel,
        FetchPackageRegistry: package_mjs_1.FetchPackageRegistry,
        withAccessModel: initOptions.withAccessModel,
        withPackageRegistry: initOptions.withPackageRegistry,
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5tanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbWFpbi5tdHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsa0RBQWtEO0FBUWxELHVEQUE0RTtBQUFuRSxzSEFBQSxrQkFBa0IsT0FBQTtBQUFFLHNIQUFBLGtCQUFrQixPQUFBO0FBQy9DLDJDQUEyQztBQUUzQywrQ0FBZ0c7QUFBdkYsaUhBQUEsaUJBQWlCLE9BQUE7QUFBRSxtSEFBQSxtQkFBbUIsT0FBQTtBQUFFLHNIQUFBLHNCQUFzQixPQUFBO0FBQ3ZFLHVEQUFzRDtBQUN0RCwyQ0FBMkM7QUFDM0MsOENBQXFFO0FBQ3JFLGtEQUF3RDtBQUN4RCw0Q0FBa0Q7QUFBekMsNkdBQUEsZ0JBQWdCLE9BQUE7QUFDekIsZ0RBQXdEO0FBQS9DLG1IQUFBLG9CQUFvQixPQUFBO0FBRzdCLCtDQUFxRDtBQUE1QyxtSEFBQSxtQkFBbUIsT0FBQTtBQUU1QiwyQkFBMkI7QUFDM0IsSUFBSSxPQUFPLE1BQU0sS0FBSyxXQUFXLEVBQUU7SUFDaEMsTUFBYyxDQUFDLGlCQUFpQixHQUFHO1FBQ2xDLFVBQVUsRUFBVixxQkFBVTtRQUVWLG1CQUFtQixFQUFFLFFBQVEsQ0FBQyxtQkFBbUI7UUFDakQsc0JBQXNCLEVBQUUsUUFBUSxDQUFDLG1CQUFtQjtRQUNwRCxrQkFBa0IsRUFBRSxXQUFXLENBQUMsa0JBQWtCO1FBQ2xELGtCQUFrQixFQUFFLFdBQVcsQ0FBQyxrQkFBa0I7S0FDbkQsQ0FBQztJQUNELE1BQWMsQ0FBQyxrQkFBa0IsR0FBRztRQUNuQyxtQkFBbUIsRUFBRSxRQUFRLENBQUMsbUJBQW1CO1FBQ2pELGtCQUFrQixFQUFFLFdBQVcsQ0FBQyxrQkFBa0I7UUFDbEQsa0JBQWtCLEVBQUUsV0FBVyxDQUFDLGtCQUFrQjtRQUVsRCxnQkFBZ0IsRUFBaEIsNEJBQWdCO1FBQ2hCLGlCQUFpQixFQUFqQiw2QkFBaUI7UUFDakIsb0JBQW9CLEVBQXBCLGtDQUFvQjtRQUVwQixlQUFlLEVBQUUsV0FBVyxDQUFDLGVBQWU7UUFDNUMsbUJBQW1CLEVBQUUsV0FBVyxDQUFDLG1CQUFtQjtLQUNyRCxDQUFDO0NBQ0giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBpbml0T3B0aW9ucyBmcm9tICcuL29wdGlvbnMuaW5pdC5tanMnO1xyXG5leHBvcnQgdHlwZSB7IEluaXRPcHRpb25zLCBCZWZvcmVCdWlsZEZuIH0gZnJvbSAnLi9vcHRpb25zLmluaXQubWpzJztcclxuZXhwb3J0IHR5cGUge1xyXG4gIFJlbmRlckJ5Q29udGVudE9wdGlvbnMsXHJcbiAgUmVuZGVySW5TZXNzaW9uT3B0aW9ucyxcclxuICBSZW5kZXJDYW52YXNPcHRpb25zIGFzIFJlbmRlclBhZ2VPcHRpb25zLFxyXG4gIFJlbmRlck9wdGlvbnMsXHJcbn0gZnJvbSAnLi9vcHRpb25zLnJlbmRlci5tanMnO1xyXG5leHBvcnQgeyBwcmVsb2FkUmVtb3RlRm9udHMsIHByZWxvYWRTeXN0ZW1Gb250cyB9IGZyb20gJy4vb3B0aW9ucy5pbml0Lm1qcyc7XHJcbmltcG9ydCAqIGFzIHJlbmRlcmVyIGZyb20gJy4vcmVuZGVyZXIubWpzJztcclxuZXhwb3J0IHR5cGUgeyBSZW5kZXJTZXNzaW9uLCBUeXBzdFJlbmRlcmVyIH0gZnJvbSAnLi9yZW5kZXJlci5tanMnO1xyXG5leHBvcnQgeyByZW5kZXJlckJ1aWxkSW5mbywgY3JlYXRlVHlwc3RSZW5kZXJlciwgY3JlYXRlVHlwc3RTdmdSZW5kZXJlciB9IGZyb20gJy4vcmVuZGVyZXIubWpzJztcclxuaW1wb3J0IHsgUmVuZGVyVmlldyB9IGZyb20gJy4vcmVuZGVyL2NhbnZhcy92aWV3Lm1qcyc7XHJcbmltcG9ydCAqIGFzIGNvbXBpbGVyIGZyb20gJy4vY29tcGlsZXIubWpzJztcclxuaW1wb3J0IHsgRmV0Y2hBY2Nlc3NNb2RlbCwgTWVtb3J5QWNjZXNzTW9kZWwgfSBmcm9tICcuL2ZzL2luZGV4Lm1qcyc7XHJcbmltcG9ydCB7IEZldGNoUGFja2FnZVJlZ2lzdHJ5IH0gZnJvbSAnLi9mcy9wYWNrYWdlLm1qcyc7XHJcbmV4cG9ydCB7IEZldGNoQWNjZXNzTW9kZWwgfSBmcm9tICcuL2ZzL2luZGV4Lm1qcyc7XHJcbmV4cG9ydCB7IEZldGNoUGFja2FnZVJlZ2lzdHJ5IH0gZnJvbSAnLi9mcy9wYWNrYWdlLm1qcyc7XHJcbmV4cG9ydCB0eXBlIHsgRmV0Y2hBY2Nlc3NPcHRpb25zIH0gZnJvbSAnLi9mcy9pbmRleC5tanMnO1xyXG5leHBvcnQgdHlwZSB7IFR5cHN0Q29tcGlsZXIgfSBmcm9tICcuL2NvbXBpbGVyLm1qcyc7XHJcbmV4cG9ydCB7IGNyZWF0ZVR5cHN0Q29tcGlsZXIgfSBmcm9tICcuL2NvbXBpbGVyLm1qcyc7XHJcblxyXG4vLyBFeHBvcnQgbW9kdWxlIG9uIHdpbmRvdy5cclxuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgKHdpbmRvdyBhcyBhbnkpLlR5cHN0UmVuZGVyTW9kdWxlID0ge1xyXG4gICAgUmVuZGVyVmlldyxcclxuXHJcbiAgICBjcmVhdGVUeXBzdFJlbmRlcmVyOiByZW5kZXJlci5jcmVhdGVUeXBzdFJlbmRlcmVyLFxyXG4gICAgY3JlYXRlVHlwc3RTdmdSZW5kZXJlcjogcmVuZGVyZXIuY3JlYXRlVHlwc3RSZW5kZXJlcixcclxuICAgIHByZWxvYWRSZW1vdGVGb250czogaW5pdE9wdGlvbnMucHJlbG9hZFJlbW90ZUZvbnRzLFxyXG4gICAgcHJlbG9hZFN5c3RlbUZvbnRzOiBpbml0T3B0aW9ucy5wcmVsb2FkU3lzdGVtRm9udHMsXHJcbiAgfTtcclxuICAod2luZG93IGFzIGFueSkuVHlwc3RDb21waWxlTW9kdWxlID0ge1xyXG4gICAgY3JlYXRlVHlwc3RDb21waWxlcjogY29tcGlsZXIuY3JlYXRlVHlwc3RDb21waWxlcixcclxuICAgIHByZWxvYWRSZW1vdGVGb250czogaW5pdE9wdGlvbnMucHJlbG9hZFJlbW90ZUZvbnRzLFxyXG4gICAgcHJlbG9hZFN5c3RlbUZvbnRzOiBpbml0T3B0aW9ucy5wcmVsb2FkU3lzdGVtRm9udHMsXHJcblxyXG4gICAgRmV0Y2hBY2Nlc3NNb2RlbCxcclxuICAgIE1lbW9yeUFjY2Vzc01vZGVsLFxyXG4gICAgRmV0Y2hQYWNrYWdlUmVnaXN0cnksXHJcblxyXG4gICAgd2l0aEFjY2Vzc01vZGVsOiBpbml0T3B0aW9ucy53aXRoQWNjZXNzTW9kZWwsXHJcbiAgICB3aXRoUGFja2FnZVJlZ2lzdHJ5OiBpbml0T3B0aW9ucy53aXRoUGFja2FnZVJlZ2lzdHJ5LFxyXG4gIH07XHJcbn1cclxuIl19