/**
 * @internal
 */
const once = (fn) => {
    let called = false;
    let res;
    return () => {
        if (called) {
            return res;
        }
        called = true;
        return (res = fn());
    };
};
/** @internal */
export class LazyWasmModule {
    wasmBin;
    initOnce;
    constructor(initFn) {
        if (typeof initFn !== 'function') {
            throw new Error('initFn is not a function');
        }
        this.initOnce = once(async () => {
            await initFn(this.wasmBin);
        });
    }
    async init(module) {
        this.wasmBin = module;
        await this.initOnce();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FzbS5tanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvd2FzbS5tdHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBV0E7O0dBRUc7QUFDSCxNQUFNLElBQUksR0FBRyxDQUFnQixFQUFXLEVBQUUsRUFBRTtJQUMxQyxJQUFJLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDbkIsSUFBSSxHQUFNLENBQUM7SUFDWCxPQUFPLEdBQUcsRUFBRTtRQUNWLElBQUksTUFBTSxFQUFFO1lBQ1YsT0FBTyxHQUFHLENBQUM7U0FDWjtRQUNELE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDZCxPQUFPLENBQUMsR0FBRyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDdEIsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBS0YsZ0JBQWdCO0FBQ2hCLE1BQU0sT0FBTyxjQUFjO0lBQ2pCLE9BQU8sQ0FBc0I7SUFDN0IsUUFBUSxDQUFzQjtJQUV0QyxZQUFZLE1BQXdEO1FBQ2xFLElBQUksT0FBTyxNQUFNLEtBQUssVUFBVSxFQUFFO1lBQ2hDLE1BQU0sSUFBSSxLQUFLLENBQUMsMEJBQTBCLENBQUMsQ0FBQztTQUM3QztRQUVELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLEtBQUssSUFBSSxFQUFFO1lBQzlCLE1BQU0sTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM3QixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQTZEO1FBQ3RFLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLE1BQU0sSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3hCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBUaGUgcmVmZXJlbmNlIG9mIGEgV2ViQXNzZW1ibHkgbW9kdWxlIHdoaWNoIGlzIGNvcGllZCBmcm9tIHRoZSB3YXNtLWJpbmRnZW5cclxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vcnVzdHdhc20vd2FzbS1iaW5kZ2VuL2Jsb2IvMmM2MjI3MTVjOWU2NjAyZjdiYjM3NzgyOGM3MmY3OTUzYjE3OGVkNy9jcmF0ZXMvY2xpLXN1cHBvcnQvc3JjL2pzL21vZC5ycyNMNjU2XHJcbiAqXHJcbiAqIFlvdXIgbW9zdCBjb21tb24gdXNlIGNhc2Ugd2lsbCBiZSB0byBwYXNzIGEgVVJMIHRvIGEgd2FzbSBmaWxlIGhlcmUuXHJcbiAqICsgYFdlYkFzc2VtYmx5Lk1vZHVsZWAgLSBBbiBpbnN0YW50aWF0ZWQgd2FzbSBtb2R1bGUuXHJcbiAqICsgYFVSTGAgLSBSZW1vdGUgdXJsIHRvIGEgd2FzbSBmaWxlXHJcbiAqICsgYEJ1ZmZlclNvdXJjZWAgLSBBbiBBcnJheUJ1ZmZlclZpZXcgb3IgYW4gQXJyYXlCdWZmZXJcclxuICovXHJcbmV4cG9ydCB0eXBlIFdlYkFzc2VtYmx5TW9kdWxlUmVmID0gUmVxdWVzdEluZm8gfCBVUkwgfCBSZXNwb25zZSB8IEJ1ZmZlclNvdXJjZSB8IFdlYkFzc2VtYmx5Lk1vZHVsZTtcclxuXHJcbi8qKlxyXG4gKiBAaW50ZXJuYWxcclxuICovXHJcbmNvbnN0IG9uY2UgPSA8VCBleHRlbmRzIGFueT4oZm46ICgpID0+IFQpID0+IHtcclxuICBsZXQgY2FsbGVkID0gZmFsc2U7XHJcbiAgbGV0IHJlczogVDtcclxuICByZXR1cm4gKCkgPT4ge1xyXG4gICAgaWYgKGNhbGxlZCkge1xyXG4gICAgICByZXR1cm4gcmVzO1xyXG4gICAgfVxyXG4gICAgY2FsbGVkID0gdHJ1ZTtcclxuICAgIHJldHVybiAocmVzID0gZm4oKSk7XHJcbiAgfTtcclxufTtcclxuXHJcbi8qKiBAaW50ZXJuYWwgY29waWVkIGZyb20gd2FzbS1iaW5kZ2VuICovXHJcbnR5cGUgV2FzbU1vZHVsZUluaXRQYXJhbSA9IFdlYkFzc2VtYmx5TW9kdWxlUmVmIHwgUHJvbWlzZTxXZWJBc3NlbWJseU1vZHVsZVJlZj4gfCB1bmRlZmluZWQ7XHJcblxyXG4vKiogQGludGVybmFsICovXHJcbmV4cG9ydCBjbGFzcyBMYXp5V2FzbU1vZHVsZSB7XHJcbiAgcHJpdmF0ZSB3YXNtQmluOiBXYXNtTW9kdWxlSW5pdFBhcmFtO1xyXG4gIHByaXZhdGUgaW5pdE9uY2U6ICgpID0+IFByb21pc2U8dm9pZD47XHJcblxyXG4gIGNvbnN0cnVjdG9yKGluaXRGbjogKHBhcmFtOiBXYXNtTW9kdWxlSW5pdFBhcmFtKSA9PiBQcm9taXNlPHVua25vd24+KSB7XHJcbiAgICBpZiAodHlwZW9mIGluaXRGbiAhPT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2luaXRGbiBpcyBub3QgYSBmdW5jdGlvbicpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuaW5pdE9uY2UgPSBvbmNlKGFzeW5jICgpID0+IHtcclxuICAgICAgYXdhaXQgaW5pdEZuKHRoaXMud2FzbUJpbik7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGFzeW5jIGluaXQobW9kdWxlPzogV2ViQXNzZW1ibHlNb2R1bGVSZWYgfCBQcm9taXNlPFdlYkFzc2VtYmx5TW9kdWxlUmVmPikge1xyXG4gICAgdGhpcy53YXNtQmluID0gbW9kdWxlO1xyXG4gICAgYXdhaXQgdGhpcy5pbml0T25jZSgpO1xyXG4gIH1cclxufVxyXG4iXX0=