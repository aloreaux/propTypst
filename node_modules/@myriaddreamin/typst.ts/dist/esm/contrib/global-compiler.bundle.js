/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository https://github.com/Myriad-Dreamin/typst.ts/blob/main/packages/typst.ts
*/


// src/contrib/global-compiler.mts
var globalCompiler = void 0;
var globalCompilerInitReady;
var isReady = false;
function getGlobalCompiler() {
  return isReady ? globalCompiler : void 0;
}
function createGlobalCompiler(creator, initOptions) {
  const compiler = globalCompiler || creator();
  if (globalCompilerInitReady !== void 0) {
    return globalCompilerInitReady;
  }
  return globalCompilerInitReady = (async () => {
    isReady = true;
    await compiler.init(initOptions);
    return globalCompiler = compiler;
  })();
}
function withGlobalCompiler(creator, initOptions, resolve, reject) {
  const compiler = getGlobalCompiler();
  if (compiler) {
    resolve(compiler);
    return;
  }
  createGlobalCompiler(creator, initOptions).then(resolve).catch(reject);
}
export {
  createGlobalCompiler,
  getGlobalCompiler,
  withGlobalCompiler
};
