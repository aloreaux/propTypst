export class TypstCancellationToken {
    isCancellationRequested = false;
    _onCancelled;
    _onCancelledResolveResolved;
    constructor() {
        let resolveT = undefined;
        let resolveX = undefined;
        this._onCancelled = new Promise(resolve => {
            resolveT = resolve;
            if (resolveX) {
                resolveX(resolve);
            }
        });
        this._onCancelledResolveResolved = new Promise(resolve => {
            resolveX = resolve;
            if (resolveT) {
                resolve(resolveT);
            }
        });
    }
    async cancel() {
        await this._onCancelledResolveResolved;
        this.isCancellationRequested = true;
    }
    isCancelRequested() {
        return this.isCancellationRequested;
    }
    async consume() {
        (await this._onCancelledResolveResolved)();
    }
    wait() {
        return this._onCancelled;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwc3QtY2FuY2VsLm1qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb250cmliL2RvbS90eXBzdC1jYW5jZWwubXRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sT0FBTyxzQkFBc0I7SUFDakMsdUJBQXVCLEdBQVksS0FBSyxDQUFDO0lBQ2pDLFlBQVksQ0FBZ0I7SUFDNUIsMkJBQTJCLENBQXNCO0lBRXpEO1FBQ0UsSUFBSSxRQUFRLEdBQWUsU0FBVSxDQUFDO1FBQ3RDLElBQUksUUFBUSxHQUE0QixTQUFVLENBQUM7UUFDbkQsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUN4QyxRQUFRLEdBQUcsT0FBTyxDQUFDO1lBQ25CLElBQUksUUFBUSxFQUFFO2dCQUNaLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQzthQUNuQjtRQUNILENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLDJCQUEyQixHQUFHLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ3ZELFFBQVEsR0FBRyxPQUFPLENBQUM7WUFDbkIsSUFBSSxRQUFRLEVBQUU7Z0JBQ1osT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO2FBQ25CO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsS0FBSyxDQUFDLE1BQU07UUFDVixNQUFNLElBQUksQ0FBQywyQkFBMkIsQ0FBQztRQUN2QyxJQUFJLENBQUMsdUJBQXVCLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLENBQUM7SUFFRCxpQkFBaUI7UUFDZixPQUFPLElBQUksQ0FBQyx1QkFBdUIsQ0FBQztJQUN0QyxDQUFDO0lBRUQsS0FBSyxDQUFDLE9BQU87UUFDWCxDQUFDLE1BQU0sSUFBSSxDQUFDLDJCQUEyQixDQUFDLEVBQUUsQ0FBQztJQUM3QyxDQUFDO0lBRUQsSUFBSTtRQUNGLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztJQUMzQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgVHlwc3RDYW5jZWxsYXRpb25Ub2tlbiB7XHJcbiAgaXNDYW5jZWxsYXRpb25SZXF1ZXN0ZWQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuICBwcml2YXRlIF9vbkNhbmNlbGxlZDogUHJvbWlzZTx2b2lkPjtcclxuICBwcml2YXRlIF9vbkNhbmNlbGxlZFJlc29sdmVSZXNvbHZlZDogUHJvbWlzZTwoKSA9PiB2b2lkPjtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBsZXQgcmVzb2x2ZVQ6ICgpID0+IHZvaWQgPSB1bmRlZmluZWQhO1xyXG4gICAgbGV0IHJlc29sdmVYOiAoXzogKCkgPT4gdm9pZCkgPT4gdm9pZCA9IHVuZGVmaW5lZCE7XHJcbiAgICB0aGlzLl9vbkNhbmNlbGxlZCA9IG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgICByZXNvbHZlVCA9IHJlc29sdmU7XHJcbiAgICAgIGlmIChyZXNvbHZlWCkge1xyXG4gICAgICAgIHJlc29sdmVYKHJlc29sdmUpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIHRoaXMuX29uQ2FuY2VsbGVkUmVzb2x2ZVJlc29sdmVkID0gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XHJcbiAgICAgIHJlc29sdmVYID0gcmVzb2x2ZTtcclxuICAgICAgaWYgKHJlc29sdmVUKSB7XHJcbiAgICAgICAgcmVzb2x2ZShyZXNvbHZlVCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYXN5bmMgY2FuY2VsKCk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgYXdhaXQgdGhpcy5fb25DYW5jZWxsZWRSZXNvbHZlUmVzb2x2ZWQ7XHJcbiAgICB0aGlzLmlzQ2FuY2VsbGF0aW9uUmVxdWVzdGVkID0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIGlzQ2FuY2VsUmVxdWVzdGVkKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuaXNDYW5jZWxsYXRpb25SZXF1ZXN0ZWQ7XHJcbiAgfVxyXG5cclxuICBhc3luYyBjb25zdW1lKCk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgKGF3YWl0IHRoaXMuX29uQ2FuY2VsbGVkUmVzb2x2ZVJlc29sdmVkKSgpO1xyXG4gIH1cclxuXHJcbiAgd2FpdCgpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIHJldHVybiB0aGlzLl9vbkNhbmNlbGxlZDtcclxuICB9XHJcbn1cclxuIl19