import * as initOptions from './options.init.mjs';
export { preloadRemoteFonts, preloadSystemFonts } from './options.init.mjs';
import * as renderer from './renderer.mjs';
export { rendererBuildInfo, createTypstRenderer, createTypstSvgRenderer } from './renderer.mjs';
import { RenderView } from './render/canvas/view.mjs';
import * as compiler from './compiler.mjs';
import { FetchAccessModel, MemoryAccessModel } from './fs/index.mjs';
import { FetchPackageRegistry } from './fs/package.mjs';
export { FetchAccessModel } from './fs/index.mjs';
export { FetchPackageRegistry } from './fs/package.mjs';
export { createTypstCompiler } from './compiler.mjs';
// Export module on window.
if (typeof window !== 'undefined') {
    window.TypstRenderModule = {
        RenderView,
        createTypstRenderer: renderer.createTypstRenderer,
        createTypstSvgRenderer: renderer.createTypstRenderer,
        preloadRemoteFonts: initOptions.preloadRemoteFonts,
        preloadSystemFonts: initOptions.preloadSystemFonts,
    };
    window.TypstCompileModule = {
        createTypstCompiler: compiler.createTypstCompiler,
        preloadRemoteFonts: initOptions.preloadRemoteFonts,
        preloadSystemFonts: initOptions.preloadSystemFonts,
        FetchAccessModel,
        MemoryAccessModel,
        FetchPackageRegistry,
        withAccessModel: initOptions.withAccessModel,
        withPackageRegistry: initOptions.withPackageRegistry,
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5tanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbWFpbi5tdHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLFdBQVcsTUFBTSxvQkFBb0IsQ0FBQztBQVFsRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUM1RSxPQUFPLEtBQUssUUFBUSxNQUFNLGdCQUFnQixDQUFDO0FBRTNDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxtQkFBbUIsRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2hHLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN0RCxPQUFPLEtBQUssUUFBUSxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBR3hELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXJELDJCQUEyQjtBQUMzQixJQUFJLE9BQU8sTUFBTSxLQUFLLFdBQVcsRUFBRTtJQUNoQyxNQUFjLENBQUMsaUJBQWlCLEdBQUc7UUFDbEMsVUFBVTtRQUVWLG1CQUFtQixFQUFFLFFBQVEsQ0FBQyxtQkFBbUI7UUFDakQsc0JBQXNCLEVBQUUsUUFBUSxDQUFDLG1CQUFtQjtRQUNwRCxrQkFBa0IsRUFBRSxXQUFXLENBQUMsa0JBQWtCO1FBQ2xELGtCQUFrQixFQUFFLFdBQVcsQ0FBQyxrQkFBa0I7S0FDbkQsQ0FBQztJQUNELE1BQWMsQ0FBQyxrQkFBa0IsR0FBRztRQUNuQyxtQkFBbUIsRUFBRSxRQUFRLENBQUMsbUJBQW1CO1FBQ2pELGtCQUFrQixFQUFFLFdBQVcsQ0FBQyxrQkFBa0I7UUFDbEQsa0JBQWtCLEVBQUUsV0FBVyxDQUFDLGtCQUFrQjtRQUVsRCxnQkFBZ0I7UUFDaEIsaUJBQWlCO1FBQ2pCLG9CQUFvQjtRQUVwQixlQUFlLEVBQUUsV0FBVyxDQUFDLGVBQWU7UUFDNUMsbUJBQW1CLEVBQUUsV0FBVyxDQUFDLG1CQUFtQjtLQUNyRCxDQUFDO0NBQ0giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBpbml0T3B0aW9ucyBmcm9tICcuL29wdGlvbnMuaW5pdC5tanMnO1xyXG5leHBvcnQgdHlwZSB7IEluaXRPcHRpb25zLCBCZWZvcmVCdWlsZEZuIH0gZnJvbSAnLi9vcHRpb25zLmluaXQubWpzJztcclxuZXhwb3J0IHR5cGUge1xyXG4gIFJlbmRlckJ5Q29udGVudE9wdGlvbnMsXHJcbiAgUmVuZGVySW5TZXNzaW9uT3B0aW9ucyxcclxuICBSZW5kZXJDYW52YXNPcHRpb25zIGFzIFJlbmRlclBhZ2VPcHRpb25zLFxyXG4gIFJlbmRlck9wdGlvbnMsXHJcbn0gZnJvbSAnLi9vcHRpb25zLnJlbmRlci5tanMnO1xyXG5leHBvcnQgeyBwcmVsb2FkUmVtb3RlRm9udHMsIHByZWxvYWRTeXN0ZW1Gb250cyB9IGZyb20gJy4vb3B0aW9ucy5pbml0Lm1qcyc7XHJcbmltcG9ydCAqIGFzIHJlbmRlcmVyIGZyb20gJy4vcmVuZGVyZXIubWpzJztcclxuZXhwb3J0IHR5cGUgeyBSZW5kZXJTZXNzaW9uLCBUeXBzdFJlbmRlcmVyIH0gZnJvbSAnLi9yZW5kZXJlci5tanMnO1xyXG5leHBvcnQgeyByZW5kZXJlckJ1aWxkSW5mbywgY3JlYXRlVHlwc3RSZW5kZXJlciwgY3JlYXRlVHlwc3RTdmdSZW5kZXJlciB9IGZyb20gJy4vcmVuZGVyZXIubWpzJztcclxuaW1wb3J0IHsgUmVuZGVyVmlldyB9IGZyb20gJy4vcmVuZGVyL2NhbnZhcy92aWV3Lm1qcyc7XHJcbmltcG9ydCAqIGFzIGNvbXBpbGVyIGZyb20gJy4vY29tcGlsZXIubWpzJztcclxuaW1wb3J0IHsgRmV0Y2hBY2Nlc3NNb2RlbCwgTWVtb3J5QWNjZXNzTW9kZWwgfSBmcm9tICcuL2ZzL2luZGV4Lm1qcyc7XHJcbmltcG9ydCB7IEZldGNoUGFja2FnZVJlZ2lzdHJ5IH0gZnJvbSAnLi9mcy9wYWNrYWdlLm1qcyc7XHJcbmV4cG9ydCB7IEZldGNoQWNjZXNzTW9kZWwgfSBmcm9tICcuL2ZzL2luZGV4Lm1qcyc7XHJcbmV4cG9ydCB7IEZldGNoUGFja2FnZVJlZ2lzdHJ5IH0gZnJvbSAnLi9mcy9wYWNrYWdlLm1qcyc7XHJcbmV4cG9ydCB0eXBlIHsgRmV0Y2hBY2Nlc3NPcHRpb25zIH0gZnJvbSAnLi9mcy9pbmRleC5tanMnO1xyXG5leHBvcnQgdHlwZSB7IFR5cHN0Q29tcGlsZXIgfSBmcm9tICcuL2NvbXBpbGVyLm1qcyc7XHJcbmV4cG9ydCB7IGNyZWF0ZVR5cHN0Q29tcGlsZXIgfSBmcm9tICcuL2NvbXBpbGVyLm1qcyc7XHJcblxyXG4vLyBFeHBvcnQgbW9kdWxlIG9uIHdpbmRvdy5cclxuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgKHdpbmRvdyBhcyBhbnkpLlR5cHN0UmVuZGVyTW9kdWxlID0ge1xyXG4gICAgUmVuZGVyVmlldyxcclxuXHJcbiAgICBjcmVhdGVUeXBzdFJlbmRlcmVyOiByZW5kZXJlci5jcmVhdGVUeXBzdFJlbmRlcmVyLFxyXG4gICAgY3JlYXRlVHlwc3RTdmdSZW5kZXJlcjogcmVuZGVyZXIuY3JlYXRlVHlwc3RSZW5kZXJlcixcclxuICAgIHByZWxvYWRSZW1vdGVGb250czogaW5pdE9wdGlvbnMucHJlbG9hZFJlbW90ZUZvbnRzLFxyXG4gICAgcHJlbG9hZFN5c3RlbUZvbnRzOiBpbml0T3B0aW9ucy5wcmVsb2FkU3lzdGVtRm9udHMsXHJcbiAgfTtcclxuICAod2luZG93IGFzIGFueSkuVHlwc3RDb21waWxlTW9kdWxlID0ge1xyXG4gICAgY3JlYXRlVHlwc3RDb21waWxlcjogY29tcGlsZXIuY3JlYXRlVHlwc3RDb21waWxlcixcclxuICAgIHByZWxvYWRSZW1vdGVGb250czogaW5pdE9wdGlvbnMucHJlbG9hZFJlbW90ZUZvbnRzLFxyXG4gICAgcHJlbG9hZFN5c3RlbUZvbnRzOiBpbml0T3B0aW9ucy5wcmVsb2FkU3lzdGVtRm9udHMsXHJcblxyXG4gICAgRmV0Y2hBY2Nlc3NNb2RlbCxcclxuICAgIE1lbW9yeUFjY2Vzc01vZGVsLFxyXG4gICAgRmV0Y2hQYWNrYWdlUmVnaXN0cnksXHJcblxyXG4gICAgd2l0aEFjY2Vzc01vZGVsOiBpbml0T3B0aW9ucy53aXRoQWNjZXNzTW9kZWwsXHJcbiAgICB3aXRoUGFja2FnZVJlZ2lzdHJ5OiBpbml0T3B0aW9ucy53aXRoUGFja2FnZVJlZ2lzdHJ5LFxyXG4gIH07XHJcbn1cclxuIl19